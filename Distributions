Histograms
Say we would like to create a histogram to see how petal length varies in iris flowers. 


# Histogram 
sns.distplot(a=iris_data['Petal Length (cm)'], kde=False)

    kde=False is something we'll always provide when creating a histogram, as leaving it out will create a slightly different plot.





Density plots
The next type of plot is a kernel density estimate (KDE) plot. you can think of it as a smoothed histogram.

# KDE plot 
sns.kdeplot(data=iris_data['Petal Length (cm)'], shade=True)







2D KDE plots

# 2D KDE plot
sns.jointplot(x=iris_data['Petal Length (cm)'], y=iris_data['Sepal Width (cm)'], kind="kde")








Color-coded plots

For the next part of the tutorial, we'll create plots to understand differences between the species. To accomplish this, we begin by breaking the dataset into three separate files, with one for each species.
We use label= to set how each histogram will appear in the legend.

# Histograms for each species
sns.distplot(a=iris_set_data['Petal Length (cm)'], label="Iris-setosa", kde=False)
sns.distplot(a=iris_ver_data['Petal Length (cm)'], label="Iris-versicolor", kde=False)
sns.distplot(a=iris_vir_data['Petal Length (cm)'], label="Iris-virginica", kde=False)

# Add title
plt.title("Histogram of Petal Lengths, by Species")

# Force legend to appear
plt.legend()








# KDE plots for each species
sns.kdeplot(data=iris_set_data['Petal Length (cm)'], label="Iris-setosa", shade=True)
sns.kdeplot(data=iris_ver_data['Petal Length (cm)'], label="Iris-versicolor", shade=True)
sns.kdeplot(data=iris_vir_data['Petal Length (cm)'], label="Iris-virginica", shade=True)

# Add title
plt.title("Distribution of Petal Lengths, by Species")




